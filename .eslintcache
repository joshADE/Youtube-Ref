[{"C:\\Users\\josh_\\reactapps\\yt-app\\src\\index.js":"1","C:\\Users\\josh_\\reactapps\\yt-app\\src\\App.js":"2","C:\\Users\\josh_\\reactapps\\yt-app\\src\\serviceWorker.js":"3","C:\\Users\\josh_\\reactapps\\yt-app\\src\\app\\store.js":"4","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\counter\\Counter.js":"5","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\counter\\counterSlice.js":"6","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VidoePlayer.js":"7","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoReferencer.js":"8","C:\\Users\\josh_\\reactapps\\yt-app\\src\\utility.js":"9","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoSearch.js":"10","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\Sidebar.js":"11","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoReferences.js":"12","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\EditReference.js":"13","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\CreateReference.js":"14","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\ComponentNavigator.js":"15","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\video\\videoSlice.js":"16","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\SidebarData.js":"17","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\withNavigator.js":"18","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\Login.js":"19","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\Register.js":"20","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\AuthOptions.js":"21","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\user\\userSlice.js":"22","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\misc\\ErrorNotice.js":"23","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\ProtectedRoute.js":"24","C:\\Users\\josh_\\reactapps\\yt-app\\src\\axios.js":"25","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\ProfileDetails.js":"26","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\error\\errorSlice.js":"27"},{"size":692,"mtime":1607540352299,"results":"28","hashOfConfig":"29"},{"size":1579,"mtime":1609466999003,"results":"30","hashOfConfig":"29"},{"size":5141,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":450,"mtime":1609452389211,"results":"32","hashOfConfig":"29"},{"size":1626,"mtime":499162500000,"results":"33","hashOfConfig":"34"},{"size":1551,"mtime":499162500000,"results":"35","hashOfConfig":"29"},{"size":4025,"mtime":1608925393790,"results":"36","hashOfConfig":"29"},{"size":7796,"mtime":1608904187854,"results":"37","hashOfConfig":"29"},{"size":296,"mtime":1607522762950,"results":"38","hashOfConfig":"29"},{"size":819,"mtime":1608925420990,"results":"39","hashOfConfig":"29"},{"size":1177,"mtime":1609264096704,"results":"40","hashOfConfig":"29"},{"size":1933,"mtime":1609409582796,"results":"41","hashOfConfig":"29"},{"size":2214,"mtime":1609409512100,"results":"42","hashOfConfig":"29"},{"size":2703,"mtime":1609467079011,"results":"43","hashOfConfig":"29"},{"size":750,"mtime":1609467032105,"results":"44","hashOfConfig":"29"},{"size":3422,"mtime":1609477097450,"results":"45","hashOfConfig":"29"},{"size":554,"mtime":1609093182239,"results":"46","hashOfConfig":"29"},{"size":866,"mtime":1608925364207,"results":"47","hashOfConfig":"29"},{"size":2402,"mtime":1609466817281,"results":"48","hashOfConfig":"29"},{"size":4155,"mtime":1609466319731,"results":"49","hashOfConfig":"29"},{"size":1119,"mtime":1609466949428,"results":"50","hashOfConfig":"29"},{"size":3734,"mtime":1609476966300,"results":"51","hashOfConfig":"29"},{"size":270,"mtime":1609134410128,"results":"52","hashOfConfig":"29"},{"size":548,"mtime":1609463460760,"results":"53","hashOfConfig":"29"},{"size":147,"mtime":1609477693578,"results":"54","hashOfConfig":"29"},{"size":751,"mtime":1609463962730,"results":"55","hashOfConfig":"29"},{"size":697,"mtime":1609458082549,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1l2lz7a",{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7l24th",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"59"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"59"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"C:\\Users\\josh_\\reactapps\\yt-app\\src\\index.js",[],["121","122"],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\App.js",["123"],"import React, { useEffect } from 'react';\r\nimport {  useDispatch } from 'react-redux';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ProtectedRoute from './components/auth/ProtectedRoute';\r\nimport './App.css';\r\nimport Sidebar from './components/Sidebar';\r\nimport VideoReferences from './components/VideoReferences';\r\nimport EditReference from './components/EditReference';\r\nimport CreateReference from './components/CreateReference';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport AuthOptions from './components/auth/AuthOptions';\r\nimport { loadUser } from './features/user/userSlice';\r\nconst App = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n      dispatch(loadUser());\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        \r\n        <Sidebar />\r\n          <div className=\"routes\">\r\n            <div className=\"inner\">\r\n              <Switch>\r\n                <ProtectedRoute exact path=\"/\" component={VideoReferences} />\r\n                <ProtectedRoute path=\"/edit/:id\" component={EditReference} />\r\n                <ProtectedRoute path=\"/create\" component={CreateReference} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/register\" component={Register} />\r\n                <Route path=\"*\" component={() => \"Page Not Found\"} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n          <AuthOptions />\r\n        </div>\r\n      \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\serviceWorker.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\app\\store.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\counter\\Counter.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VidoePlayer.js",["124"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Slide from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { CustomInput, Button } from 'reactstrap';\r\nimport ReactPlayer from 'react-player';\r\nimport { getTime } from '../utility';\r\nconst { createSliderWithTooltip } = Slide;\r\nconst Slider = createSliderWithTooltip(Slide);\r\n\r\nfunction VideoPlayer({\r\n    video,\r\n    handleVideoEnd,\r\n    nextButtonText,\r\n    nextButtonHandler\r\n}) {\r\n    const [isPaused, setPaused ] = useState(false);\r\n    const [volume, setVolume] = useState(0.5);\r\n    const [repeat, setRepeat] = useState(false);\r\n    const [value, setValue] = useState(video.startSeconds);\r\n    const videoRef = useRef();\r\n\r\n    const [videoDuration, setVideoDuration] = useState(60);\r\n\r\n    useEffect(() => {\r\n        if (videoRef.current){\r\n            setVideoDuration(videoRef.current.getDuration());\r\n        }\r\n    })\r\n    \r\n\r\n\r\n    const handleVolumeChange = (newvolume) => {\r\n        setVolume(newvolume);\r\n        \r\n    }\r\n    const handlePlaying = (e) => { \r\n        setPaused(false);  \r\n        \r\n    }\r\n    const handlePause = (e) => {\r\n        setPaused(true);\r\n        \r\n    }\r\n    const handleEnd = () => {\r\n        if (repeat){\r\n            if (videoRef.current){\r\n                videoRef.current.seekTo(video.startSeconds);\r\n                setValue(video.startSeconds);\r\n            }\r\n        }else{\r\n            handleVideoEnd();\r\n        }\r\n    }\r\n\r\n    const handleSliderChange = (newvalue) => {\r\n        setValue(newvalue);\r\n        if (videoRef.current){\r\n            videoRef.current.seekTo(newvalue);\r\n        }\r\n    }\r\n\r\n    const handleProgress = (state) => {\r\n        setValue(state.playedSeconds);\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <ReactPlayer\r\n                className=\"video\" \r\n                url={video.url}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                controls={false}\r\n                playing={!isPaused}\r\n                config={{\r\n                    youtube: video.endSeconds\r\n                    ? { playerVars: { start: video.startSeconds, end: video.endSeconds } } \r\n                    : { playerVars: { start: video.startSeconds } },\r\n                }}\r\n                onProgress={handleProgress}\r\n                volume={volume}\r\n                onPlay={handlePlaying}\r\n                onPause={handlePause}\r\n                onEnded={handleEnd}\r\n                ref={videoRef}\r\n            />\r\n            <div\r\n                className=\"track\"\r\n            >\r\n            <span\r\n                className=\"\"\r\n            >{getTime(value)}</span>\r\n            \r\n            <Slider \r\n                min={video.startSeconds}\r\n                max={video.endSeconds?video.endSeconds:videoDuration}\r\n                value={value}\r\n                onChange={handleSliderChange}\r\n                tipFormatter={val => getTime(val)}\r\n            />\r\n            </div>\r\n            <div \r\n                className=\"controls\"\r\n            >\r\n                <CustomInput \r\n                    type=\"switch\" \r\n                    id=\"pauseSwitch\" \r\n                    label=\"Pause\" \r\n                    checked={isPaused}\r\n                    onChange={() => setPaused(!isPaused)}\r\n                />\r\n                <CustomInput \r\n                    type=\"switch\" \r\n                    id=\"repeatSwitch\" \r\n                    label=\"Repeat after video ends\" \r\n                    checked={repeat}\r\n                    onChange={() => setRepeat(!repeat)}\r\n                />\r\n                <Slider \r\n                    className=\"volumeSlider\"\r\n                    min={0}\r\n                    max={1}\r\n                    value={volume}\r\n                    step={0.1}\r\n                    onChange={handleVolumeChange}\r\n                />\r\n                <Button onClick={nextButtonHandler} outline color=\"secondary\">{nextButtonText}</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoReferencer.js",["125","126"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { CustomInput, Form, FormGroup, Label, Input, Col } from 'reactstrap';\r\nimport ReactPlayer from 'react-player';\r\nimport { getTime, clamp } from '../utility'\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\n\r\n\r\n\r\nfunction VideoReferencer({\r\n    video,\r\n    setNewReference,\r\n    handleVideoEnd,\r\n    nextButtonText,\r\n    nextButtonHandler\r\n}) {\r\n    const [isPaused, setPaused ] = useState(false);\r\n    const [volume, setVolume] = useState(0.5);\r\n    const [repeat, setRepeat] = useState(false);\r\n    const videoRef = useRef();\r\n    const [referenceType, setReferenceType] = useState(video.endSeconds?'range':'point');\r\n    const [referenceName, setReferenceName] = useState(video.name?video.name:'');\r\n\r\n    const [startPoint, setStartPoint] = useState(video.startSeconds ? video.startSeconds : 0);\r\n    \r\n    const [value, setValue] = useState(startPoint);\r\n    const [videoDuration, setVideoDuration] = useState(60);\r\n    const [endPoint, setEndPoint] = useState(video.endSeconds ? video.endSeconds : 40);\r\n\r\n    useEffect(() => {\r\n        if (videoRef.current){\r\n            setVideoDuration(videoRef.current.getDuration());\r\n            setEndPoint(clamp(endPoint, value, videoRef.current.getDuration()));\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(\"start seconds\", video.startSeconds);\r\n        console.log(\"end seconds\", video.endSeconds);\r\n        console.log(\"start point\", startPoint);\r\n        console.log(\"end point\", endPoint);\r\n        \r\n    }, [endPoint])\r\n    \r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (referenceType === 'point'){\r\n            setNewReference(referenceName, Math.floor(startPoint));\r\n        }else if (referenceType === 'range'){\r\n            setNewReference(referenceName, Math.floor(startPoint), Math.floor(endPoint));\r\n        }else{\r\n            return;\r\n        }\r\n        nextButtonHandler();\r\n    }\r\n   \r\n\r\n    const handleVolumeChange = (newvolume) => {\r\n        setVolume(newvolume);\r\n        \r\n    }\r\n    const handlePlaying = (e) => { \r\n        setPaused(false);  \r\n        \r\n    }\r\n    const handlePause = (e) => {\r\n        setPaused(true);\r\n        \r\n    }\r\n\r\n    const handleReady = () => {\r\n        if (videoRef.current){\r\n            videoRef.current.seekTo(startPoint);\r\n            setValue(startPoint);\r\n        }\r\n        if (video.endSeconds){\r\n            setEndPoint(video.endSeconds);\r\n        }\r\n    }\r\n    \r\n    const handleEnd = () => {\r\n        if (repeat){\r\n            if (videoRef.current){\r\n                videoRef.current.seekTo(startPoint);\r\n                setValue(startPoint);\r\n            }\r\n        }else{\r\n            handleVideoEnd();\r\n        }\r\n    }\r\n\r\n    const handleSliderChange = (newvalue) => {\r\n        if (newvalue[0]){\r\n            setStartPoint(newvalue[0]);\r\n        }\r\n        if (newvalue[1]){\r\n            setValue(newvalue[1]);\r\n        }\r\n        if (newvalue[2]){\r\n            setEndPoint(newvalue[2]);\r\n        }\r\n        console.log(newvalue)\r\n        if (videoRef.current){\r\n            videoRef.current.seekTo(newvalue[1]);\r\n        }\r\n        //setPaused(false);\r\n    }\r\n\r\n    const handleProgress = (state) => {\r\n        setValue(state.playedSeconds);\r\n\r\n        // the range input doesn't support overlapping of handles (so endpoint - 1)\r\n        if (referenceType === 'range' && state.playedSeconds >= endPoint - 1){ \r\n            if (videoRef.current){\r\n                setPaused(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        setReferenceType(e.target.value);\r\n        if (e.target.value === 'range'){\r\n            setEndPoint(value + videoDuration / 10); // endPoint is clamped above\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"player\">\r\n            <ReactPlayer\r\n                className=\"video\" \r\n                url={video.url}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                controls={false}\r\n                playing={!isPaused}\r\n                onProgress={handleProgress}\r\n                volume={volume}\r\n                onPlay={handlePlaying}\r\n                onPause={handlePause}\r\n                onEnded={handleEnd}\r\n                onReady={handleReady}\r\n                ref={videoRef}\r\n            />\r\n            <div\r\n                className=\"track\"\r\n            >\r\n            <span\r\n                className=\"\"\r\n            >{getTime(value)}</span>\r\n            {' '} | {' '}\r\n            <span\r\n                className=\"\"\r\n            >{referenceName}</span>\r\n            <Range\r\n                min={0}\r\n                max={videoDuration}\r\n                value={(referenceType==='range')?[startPoint, value, endPoint]:[startPoint, value]}\r\n                onChange={handleSliderChange}\r\n                count={(referenceType==='range')?3:2}\r\n                pushable={true}\r\n                allowCross={true}\r\n                tipFormatter={val => getTime(val)}\r\n                handleStyle={[{}, {backgroundColor: 'paleturquoise'}]}\r\n            \r\n            />\r\n            </div>\r\n            <div \r\n                className=\"controls\"\r\n            >\r\n                <Form\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <CustomInput \r\n                        type=\"switch\" \r\n                        id=\"pauseSwitchReferencer\"\r\n                        label=\"Pause\" \r\n                        checked={isPaused}\r\n                        onChange={() => setPaused(!isPaused)}\r\n                    />\r\n                    <CustomInput \r\n                        type=\"switch\"  \r\n                        label=\"Repeat after video ends\"\r\n                        id=\"repeatSwitchReferencer\" \r\n                        checked={repeat}\r\n                        onChange={() => setRepeat(!repeat)}\r\n                    />\r\n                    <Slider \r\n                        className=\"volumeSlider\"\r\n                        min={0}\r\n                        max={1}\r\n                        value={volume}\r\n                        step={0.1}\r\n                        onChange={handleVolumeChange}\r\n                    />\r\n                    <FormGroup check>\r\n                        <Label check>\r\n                            <Input onChange={handleTypeChange} value=\"point\" checked={referenceType === 'point'} type=\"radio\" name=\"referenceType\" />{' '}\r\n                            Reference Point\r\n                        </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                        <Label check>\r\n                            <Input onChange={handleTypeChange} value=\"range\" checked={referenceType === 'range'} type=\"radio\" name=\"referenceType\" />{' '}\r\n                            Reference Range\r\n                        </Label>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"referenceName\" sm={2}>Name</Label>\r\n                        <Col sm={5}>\r\n                            <Input type=\"text\" name=\"referenceName\" value={referenceName} onChange={(e) => setReferenceName(e.target.value)} id=\"referenceName\" placeholder=\"Enter the reference name here\" required/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup check row>\r\n                        <Col sm={{ size: 3, offset: 2 }}>\r\n                        <Input type=\"submit\" value={nextButtonText}/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoReferencer","C:\\Users\\josh_\\reactapps\\yt-app\\src\\utility.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoSearch.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\Sidebar.js",["127"],"import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { SidebarData } from './SidebarData';\r\nimport ProfileDetails from './auth/ProfileDetails';\r\n\r\nconst isActive = (path, match, location) => !!(match || path === location.pathname);\r\nfunction Sidebar({\r\n\r\n}) {\r\n    return (\r\n        <nav className=\"sidebar navbar\">\r\n            <Link to=\"/\"><h1 className=\"title\">Youtube Ref</h1></Link>\r\n            \r\n            <ul\r\n                className=\"menu navbar-nav\"\r\n            >\r\n                {SidebarData.map((item, index) => {\r\n                    return (\r\n                        <li key={index} className={`navbar-item ${item.cName}`}>\r\n                            <NavLink exact to={item.path} className=\"navbar-link\" activeClassName=\"menu-link-current\" isActive={isActive.bind(this, item.path)}>\r\n                                {item.icon}\r\n                                <span>{item.title}</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n            \r\n            <ProfileDetails />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoReferences.js",["128","129","130"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Table, Button } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getTime } from '../utility'\r\nimport {\r\n    selectVideos,\r\n    getAllUserVideosAsync,\r\n    deleteVideoAsync\r\n} from '../features/video/videoSlice'\r\nfunction VideoReferences() {\r\n    const videos = useSelector(selectVideos);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllUserVideosAsync());\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>Video References</h2>\r\n            {videos.length > 0 &&\r\n            <Table\r\n                size=\"sm\"\r\n                striped\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th>URL</th>\r\n                        <th>Name</th>\r\n                        <th>Start</th>\r\n                        <th>End</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {videos.map((video, index) => \r\n                    <tr key={video.id}>\r\n                        <td>{video.url}</td>\r\n                        <td>{video.name}</td>\r\n                        <td>{getTime(video.startSeconds)}</td>\r\n                        <td>{video.endSeconds?getTime(video.endSeconds):\"-:-\"}</td>\r\n                        <td>\r\n                            <NavLink to={`/edit/${video.id}`}>Edit</NavLink> \r\n                            {' '} | {' '}\r\n                            <a href=\"#\" onClick={() => dispatch(deleteVideoAsync(video.id))}>Delete</a>\r\n                        </td>\r\n                    </tr>)}\r\n                </tbody>\r\n            </Table>}\r\n            {videos.length === 0 && <span>There are no video references to display</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoReferences\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\EditReference.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\CreateReference.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\ComponentNavigator.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\video\\videoSlice.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\SidebarData.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\withNavigator.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\Login.js",["131"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login, selectAllUserData } from '../../features/user/userSlice';\r\nimport { selectAllErrorData, clearErrors } from '../../features/error/errorSlice';\r\n\r\nimport ErrorNotice from '../misc/ErrorNotice';\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { isAuthenticated } = useSelector(selectAllUserData);\r\n    const { msg, status, id} = useSelector(selectAllErrorData);\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const [error, setError] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(id === 'LOGIN_FAIL'){\r\n           setError(msg.errors); \r\n        }else{\r\n            setError({\r\n                email: '',\r\n                password: ''\r\n            });\r\n        }\r\n        if(isAuthenticated){\r\n            history.push('/');\r\n        }\r\n    },[msg, status, id, isAuthenticated]);\r\n\r\n        const submit = (e) => {\r\n            e.preventDefault();\r\n            setMessage('');\r\n            dispatch(clearErrors());\r\n            \r\n            const loginUser = { email, password };\r\n            dispatch(login(loginUser));\r\n        }\r\n    return (\r\n       <div className=\"page\">\r\n            <h2>Log In</h2>\r\n            <form className=\"form\" onSubmit={submit}>\r\n                <span className=\"error\">{message}</span>\r\n                <label htmlFor=\"login-email\">Email</label>\r\n                <input id=\"login-email\" type=\"email\" onChange={(e) => setEmail(e.target.value)} value={email} />\r\n                {error.email && (<ErrorNotice message={error.email} clearError={() => setError({...error, email: undefined})} />)}\r\n\r\n\r\n                <label htmlFor=\"login-password\">Password</label>\r\n                <input id=\"login-password\" type=\"password\" onChange={(e) => setPassword(e.target.value)} value={password} />\r\n                {error.password && (<ErrorNotice message={error.password} clearError={() => setError({...error, password: undefined})} />)}\r\n\r\n                <input type=\"submit\" value=\"Log in\" />\r\n\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\Register.js",["132"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { selectAllUserData, register } from '../../features/user/userSlice';\r\nimport { selectAllErrorData, clearErrors } from '../../features/error/errorSlice';\r\nimport ErrorNotice from '../misc/ErrorNotice';\r\nfunction Register() {\r\n    const { isAuthenticated } = useSelector(selectAllUserData);\r\n    const { msg, status, id} = useSelector(selectAllErrorData);\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    const [firstname, setFirstName] = useState('');\r\n    const [lastname, setLastName] = useState('');\r\n    const [username, setUserName] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState({\r\n        email: '',\r\n        password: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        username: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(id === 'REGISTER_FAIL'){\r\n           setError(msg.errors); \r\n        }else{\r\n            setError({\r\n                email: '',\r\n                password: '',\r\n                firstname: '',\r\n                lastname: '',\r\n                username: ''\r\n            });\r\n        }\r\n        if(isAuthenticated){\r\n            history.push('/');\r\n        }\r\n    },[msg, status, id, isAuthenticated]);\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage('');\r\n        dispatch(clearErrors());\r\n        if (password !== passwordConfirm){\r\n            setMessage('Passwords do not match');\r\n            return;\r\n        }\r\n\r\n        const newUser = { email, password, firstname, lastname, username};\r\n        dispatch(register(newUser))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"page\">\r\n            <h2>Register</h2>\r\n            <form className=\"form\" onSubmit={submit}>\r\n                {message && (<ErrorNotice message={message} clearError={() => setMessage(undefined)} />)}\r\n                <label htmlFor=\"register-email\">Email</label>\r\n                <input id=\"register-email\" type=\"email\" onChange={(e) => setEmail(e.target.value)} value={email} />\r\n                {error.email && (<ErrorNotice message={error.email} clearError={() => setError({...error, email: undefined})} />)}\r\n\r\n                <label htmlFor=\"register-password\">Password</label>\r\n                <input id=\"register-password\" type=\"password\" onChange={(e) => setPassword(e.target.value)} value={password} />\r\n                <input type=\"password\" placeholder=\"Reenter password\" onChange={(e) => setPasswordConfirm(e.target.value)} value={passwordConfirm} />\r\n                {error.password && (<ErrorNotice message={error.password} clearError={() => setError({...error, password: undefined})} />)}\r\n\r\n                <label htmlFor=\"register-firstname\">First Name</label>\r\n                <input id=\"register-firstname\" type=\"text\" onChange={(e) => setFirstName(e.target.value)} value={firstname} />\r\n                {error.firstname && (<ErrorNotice message={error.firstname} clearError={() => setError({...error, firstname: undefined})} />)}\r\n\r\n                <label htmlFor=\"register-lastname\">Last Name</label>\r\n                <input id=\"register-lastname\" type=\"text\" onChange={(e) => setLastName(e.target.value)} value={lastname} />\r\n                {error.lastname && (<ErrorNotice message={error.lastname} clearError={() => setError({...error, lastname: undefined})} />)}\r\n\r\n                <label htmlFor=\"register-username\">Username</label>\r\n                <input id=\"register-username\" type=\"text\" onChange={(e) => setUserName(e.target.value)} value={username} />\r\n                {error.username && (<ErrorNotice message={error.username} clearError={() => setError({...error, username: undefined})} />)}\r\n\r\n                <input type=\"submit\" value=\"Register\" />\r\n\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\AuthOptions.js",["133"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { selectAllUserData } from '../../features/user/userSlice';\r\nimport { logoutSuccess } from '../../features/user/userSlice';\r\nfunction AuthOptions({\r\n}) {\r\n    const userData = useSelector(selectAllUserData);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const logoutUser = () => {\r\n        dispatch(logoutSuccess());\r\n        \r\n    }\r\n    return (\r\n        <nav className=\"auth-options\">\r\n            {userData.user ? (\r\n                <button onClick={logoutUser}><AiIcons.AiOutlineLogout />Log out</button>\r\n                ) : (\r\n                    <>\r\n                    <button onClick={() => history.push('/register')}><AiIcons.AiOutlineUserAdd />Register</button>\r\n                    <button onClick={() => history.push('/login')}><AiIcons.AiOutlineLogin />Log in</button>\r\n                    </>\r\n                )\r\n\r\n            }\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default AuthOptions\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\user\\userSlice.js",["134","135"],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\misc\\ErrorNotice.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\ProtectedRoute.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\axios.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\ProfileDetails.js",["136"],"import React from 'react'\r\nimport DefaultProfilePhoto from '../../assets/profile-photo.jpg'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllUserData } from '../../features/user/userSlice';\r\nfunction ProfileDetails() {\r\n    const { user } = useSelector(selectAllUserData);\r\n    return (\r\n        <div className=\"profile-info\">\r\n            <img src={DefaultProfilePhoto} className=\"profile-photo\" alt=\"profile photo\" />\r\n            <div className=\"profile-details\">\r\n                <span className=\"user-name\">{user ? user.firstname + ' ' + user.lastname : 'Guest' }</span>\r\n                <br />\r\n                <span className=\"user-type\">User</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileDetails\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\error\\errorSlice.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":19,"column":6,"nodeType":"143","endLine":19,"endColumn":8,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":24,"column":5,"nodeType":"146","endLine":24,"endColumn":14,"suggestions":"147"},{"ruleId":"141","severity":1,"message":"148","line":33,"column":5,"nodeType":"146","endLine":33,"endColumn":14,"suggestions":"149"},{"ruleId":"141","severity":1,"message":"150","line":46,"column":8,"nodeType":"143","endLine":46,"endColumn":18,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":7,"column":18,"nodeType":"154","messageId":"155","endLine":9,"endColumn":2},{"ruleId":"156","severity":1,"message":"157","line":3,"column":17,"nodeType":"146","messageId":"158","endLine":3,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":17,"column":8,"nodeType":"143","endLine":17,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":46,"column":29,"nodeType":"162","endLine":46,"endColumn":94},{"ruleId":"141","severity":1,"message":"163","line":36,"column":7,"nodeType":"143","endLine":36,"endColumn":41,"suggestions":"164"},{"ruleId":"141","severity":1,"message":"163","line":43,"column":7,"nodeType":"143","endLine":43,"endColumn":41,"suggestions":"165"},{"ruleId":"152","severity":1,"message":"153","line":7,"column":22,"nodeType":"154","messageId":"155","endLine":8,"endColumn":2},{"ruleId":"156","severity":1,"message":"166","line":3,"column":21,"nodeType":"146","messageId":"158","endLine":3,"endColumn":32},{"ruleId":"156","severity":1,"message":"167","line":94,"column":13,"nodeType":"146","messageId":"158","endLine":94,"endColumn":24},{"ruleId":"168","severity":1,"message":"169","line":9,"column":13,"nodeType":"162","endLine":9,"endColumn":92},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["172"],"React Hook useEffect contains a call to 'setVideoDuration'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["173"],"React Hook useEffect contains a call to 'setVideoDuration'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [endPoint, value] as a second argument to the useEffect Hook.",["174"],"React Hook useEffect has missing dependencies: 'startPoint', 'video.endSeconds', and 'video.startSeconds'. Either include them or remove the dependency array.",["175"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'Button' is defined but never used.","unusedVar",["176"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["177"],["178"],"'clearErrors' is defined but never used.","'registerRes' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"179","fix":"187"},{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},"Update the dependencies array to be: [dispatch]",{"range":"191","text":"192"},"Add dependencies array: []",{"range":"193","text":"194"},"Add dependencies array: [endPoint, value]",{"range":"195","text":"196"},"Update the dependencies array to be: [endPoint, startPoint, video.endSeconds, video.startSeconds]",{"range":"197","text":"198"},{"range":"199","text":"192"},"Update the dependencies array to be: [msg, status, id, isAuthenticated, history]",{"range":"200","text":"201"},{"range":"202","text":"201"},[794,796],"[dispatch]",[905,905],", []",[1418,1418],", [endPoint, value]",[1671,1681],"[endPoint, startPoint, video.endSeconds, video.startSeconds]",[533,535],[1132,1166],"[msg, status, id, isAuthenticated, history]",[1519,1553]]