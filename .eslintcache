[{"C:\\Users\\josh_\\reactapps\\yt-app\\src\\index.js":"1","C:\\Users\\josh_\\reactapps\\yt-app\\src\\App.js":"2","C:\\Users\\josh_\\reactapps\\yt-app\\src\\serviceWorker.js":"3","C:\\Users\\josh_\\reactapps\\yt-app\\src\\app\\store.js":"4","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\counter\\Counter.js":"5","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\counter\\counterSlice.js":"6","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VidoePlayer.js":"7","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoReferencer.js":"8","C:\\Users\\josh_\\reactapps\\yt-app\\src\\utility.js":"9","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoSearch.js":"10","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\Sidebar.js":"11","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoReferences.js":"12","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\EditReference.js":"13","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\CreateReference.js":"14","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\ComponentNavigator.js":"15","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\video\\videoSlice.js":"16","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\SidebarData.js":"17","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\withNavigator.js":"18","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\Login.js":"19","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\Register.js":"20","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\AuthOptions.js":"21","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\user\\userSlice.js":"22","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\misc\\ErrorNotice.js":"23","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\ProtectedRoute.js":"24","C:\\Users\\josh_\\reactapps\\yt-app\\src\\axios.js":"25"},{"size":692,"mtime":1607540352299,"results":"26","hashOfConfig":"27"},{"size":2492,"mtime":1609209812792,"results":"28","hashOfConfig":"27"},{"size":5141,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":366,"mtime":1609097708196,"results":"30","hashOfConfig":"27"},{"size":1626,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":1551,"mtime":499162500000,"results":"33","hashOfConfig":"27"},{"size":4025,"mtime":1608925393790,"results":"34","hashOfConfig":"27"},{"size":7796,"mtime":1608904187854,"results":"35","hashOfConfig":"27"},{"size":296,"mtime":1607522762950,"results":"36","hashOfConfig":"27"},{"size":819,"mtime":1608925420990,"results":"37","hashOfConfig":"27"},{"size":1232,"mtime":1609216412956,"results":"38","hashOfConfig":"27"},{"size":1798,"mtime":1608926522434,"results":"39","hashOfConfig":"27"},{"size":2291,"mtime":1608925598197,"results":"40","hashOfConfig":"27"},{"size":2740,"mtime":1608925581990,"results":"41","hashOfConfig":"27"},{"size":775,"mtime":1608925506795,"results":"42","hashOfConfig":"27"},{"size":687,"mtime":1608882841996,"results":"43","hashOfConfig":"27"},{"size":554,"mtime":1609093182239,"results":"44","hashOfConfig":"27"},{"size":866,"mtime":1608925364207,"results":"45","hashOfConfig":"27"},{"size":2261,"mtime":1609141871972,"results":"46","hashOfConfig":"27"},{"size":4152,"mtime":1609141866137,"results":"47","hashOfConfig":"27"},{"size":1126,"mtime":1609173088648,"results":"48","hashOfConfig":"27"},{"size":582,"mtime":1609098837064,"results":"49","hashOfConfig":"27"},{"size":270,"mtime":1609134410128,"results":"50","hashOfConfig":"27"},{"size":542,"mtime":1609141869985,"results":"51","hashOfConfig":"27"},{"size":132,"mtime":1609141439536,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1l2lz7a",{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7l24th",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\josh_\\reactapps\\yt-app\\src\\index.js",[],["110","111"],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\App.js",["112","113"],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\serviceWorker.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\app\\store.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\counter\\Counter.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VidoePlayer.js",["114"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Slide from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { CustomInput, Button } from 'reactstrap';\r\nimport ReactPlayer from 'react-player';\r\nimport { getTime } from '../utility';\r\nconst { createSliderWithTooltip } = Slide;\r\nconst Slider = createSliderWithTooltip(Slide);\r\n\r\nfunction VideoPlayer({\r\n    video,\r\n    handleVideoEnd,\r\n    nextButtonText,\r\n    nextButtonHandler\r\n}) {\r\n    const [isPaused, setPaused ] = useState(false);\r\n    const [volume, setVolume] = useState(0.5);\r\n    const [repeat, setRepeat] = useState(false);\r\n    const [value, setValue] = useState(video.startSeconds);\r\n    const videoRef = useRef();\r\n\r\n    const [videoDuration, setVideoDuration] = useState(60);\r\n\r\n    useEffect(() => {\r\n        if (videoRef.current){\r\n            setVideoDuration(videoRef.current.getDuration());\r\n        }\r\n    })\r\n    \r\n\r\n\r\n    const handleVolumeChange = (newvolume) => {\r\n        setVolume(newvolume);\r\n        \r\n    }\r\n    const handlePlaying = (e) => { \r\n        setPaused(false);  \r\n        \r\n    }\r\n    const handlePause = (e) => {\r\n        setPaused(true);\r\n        \r\n    }\r\n    const handleEnd = () => {\r\n        if (repeat){\r\n            if (videoRef.current){\r\n                videoRef.current.seekTo(video.startSeconds);\r\n                setValue(video.startSeconds);\r\n            }\r\n        }else{\r\n            handleVideoEnd();\r\n        }\r\n    }\r\n\r\n    const handleSliderChange = (newvalue) => {\r\n        setValue(newvalue);\r\n        if (videoRef.current){\r\n            videoRef.current.seekTo(newvalue);\r\n        }\r\n    }\r\n\r\n    const handleProgress = (state) => {\r\n        setValue(state.playedSeconds);\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <ReactPlayer\r\n                className=\"video\" \r\n                url={video.url}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                controls={false}\r\n                playing={!isPaused}\r\n                config={{\r\n                    youtube: video.endSeconds\r\n                    ? { playerVars: { start: video.startSeconds, end: video.endSeconds } } \r\n                    : { playerVars: { start: video.startSeconds } },\r\n                }}\r\n                onProgress={handleProgress}\r\n                volume={volume}\r\n                onPlay={handlePlaying}\r\n                onPause={handlePause}\r\n                onEnded={handleEnd}\r\n                ref={videoRef}\r\n            />\r\n            <div\r\n                className=\"track\"\r\n            >\r\n            <span\r\n                className=\"\"\r\n            >{getTime(value)}</span>\r\n            \r\n            <Slider \r\n                min={video.startSeconds}\r\n                max={video.endSeconds?video.endSeconds:videoDuration}\r\n                value={value}\r\n                onChange={handleSliderChange}\r\n                tipFormatter={val => getTime(val)}\r\n            />\r\n            </div>\r\n            <div \r\n                className=\"controls\"\r\n            >\r\n                <CustomInput \r\n                    type=\"switch\" \r\n                    id=\"pauseSwitch\" \r\n                    label=\"Pause\" \r\n                    checked={isPaused}\r\n                    onChange={() => setPaused(!isPaused)}\r\n                />\r\n                <CustomInput \r\n                    type=\"switch\" \r\n                    id=\"repeatSwitch\" \r\n                    label=\"Repeat after video ends\" \r\n                    checked={repeat}\r\n                    onChange={() => setRepeat(!repeat)}\r\n                />\r\n                <Slider \r\n                    className=\"volumeSlider\"\r\n                    min={0}\r\n                    max={1}\r\n                    value={volume}\r\n                    step={0.1}\r\n                    onChange={handleVolumeChange}\r\n                />\r\n                <Button onClick={nextButtonHandler} outline color=\"secondary\">{nextButtonText}</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoReferencer.js",["115","116"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { CustomInput, Form, FormGroup, Label, Input, Col } from 'reactstrap';\r\nimport ReactPlayer from 'react-player';\r\nimport { getTime, clamp } from '../utility'\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\n\r\n\r\n\r\nfunction VideoReferencer({\r\n    video,\r\n    setNewReference,\r\n    handleVideoEnd,\r\n    nextButtonText,\r\n    nextButtonHandler\r\n}) {\r\n    const [isPaused, setPaused ] = useState(false);\r\n    const [volume, setVolume] = useState(0.5);\r\n    const [repeat, setRepeat] = useState(false);\r\n    const videoRef = useRef();\r\n    const [referenceType, setReferenceType] = useState(video.endSeconds?'range':'point');\r\n    const [referenceName, setReferenceName] = useState(video.name?video.name:'');\r\n\r\n    const [startPoint, setStartPoint] = useState(video.startSeconds ? video.startSeconds : 0);\r\n    \r\n    const [value, setValue] = useState(startPoint);\r\n    const [videoDuration, setVideoDuration] = useState(60);\r\n    const [endPoint, setEndPoint] = useState(video.endSeconds ? video.endSeconds : 40);\r\n\r\n    useEffect(() => {\r\n        if (videoRef.current){\r\n            setVideoDuration(videoRef.current.getDuration());\r\n            setEndPoint(clamp(endPoint, value, videoRef.current.getDuration()));\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(\"start seconds\", video.startSeconds);\r\n        console.log(\"end seconds\", video.endSeconds);\r\n        console.log(\"start point\", startPoint);\r\n        console.log(\"end point\", endPoint);\r\n        \r\n    }, [endPoint])\r\n    \r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (referenceType === 'point'){\r\n            setNewReference(referenceName, Math.floor(startPoint));\r\n        }else if (referenceType === 'range'){\r\n            setNewReference(referenceName, Math.floor(startPoint), Math.floor(endPoint));\r\n        }else{\r\n            return;\r\n        }\r\n        nextButtonHandler();\r\n    }\r\n   \r\n\r\n    const handleVolumeChange = (newvolume) => {\r\n        setVolume(newvolume);\r\n        \r\n    }\r\n    const handlePlaying = (e) => { \r\n        setPaused(false);  \r\n        \r\n    }\r\n    const handlePause = (e) => {\r\n        setPaused(true);\r\n        \r\n    }\r\n\r\n    const handleReady = () => {\r\n        if (videoRef.current){\r\n            videoRef.current.seekTo(startPoint);\r\n            setValue(startPoint);\r\n        }\r\n        if (video.endSeconds){\r\n            setEndPoint(video.endSeconds);\r\n        }\r\n    }\r\n    \r\n    const handleEnd = () => {\r\n        if (repeat){\r\n            if (videoRef.current){\r\n                videoRef.current.seekTo(startPoint);\r\n                setValue(startPoint);\r\n            }\r\n        }else{\r\n            handleVideoEnd();\r\n        }\r\n    }\r\n\r\n    const handleSliderChange = (newvalue) => {\r\n        if (newvalue[0]){\r\n            setStartPoint(newvalue[0]);\r\n        }\r\n        if (newvalue[1]){\r\n            setValue(newvalue[1]);\r\n        }\r\n        if (newvalue[2]){\r\n            setEndPoint(newvalue[2]);\r\n        }\r\n        console.log(newvalue)\r\n        if (videoRef.current){\r\n            videoRef.current.seekTo(newvalue[1]);\r\n        }\r\n        //setPaused(false);\r\n    }\r\n\r\n    const handleProgress = (state) => {\r\n        setValue(state.playedSeconds);\r\n\r\n        // the range input doesn't support overlapping of handles (so endpoint - 1)\r\n        if (referenceType === 'range' && state.playedSeconds >= endPoint - 1){ \r\n            if (videoRef.current){\r\n                setPaused(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        setReferenceType(e.target.value);\r\n        if (e.target.value === 'range'){\r\n            setEndPoint(value + videoDuration / 10); // endPoint is clamped above\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"player\">\r\n            <ReactPlayer\r\n                className=\"video\" \r\n                url={video.url}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                controls={false}\r\n                playing={!isPaused}\r\n                onProgress={handleProgress}\r\n                volume={volume}\r\n                onPlay={handlePlaying}\r\n                onPause={handlePause}\r\n                onEnded={handleEnd}\r\n                onReady={handleReady}\r\n                ref={videoRef}\r\n            />\r\n            <div\r\n                className=\"track\"\r\n            >\r\n            <span\r\n                className=\"\"\r\n            >{getTime(value)}</span>\r\n            {' '} | {' '}\r\n            <span\r\n                className=\"\"\r\n            >{referenceName}</span>\r\n            <Range\r\n                min={0}\r\n                max={videoDuration}\r\n                value={(referenceType==='range')?[startPoint, value, endPoint]:[startPoint, value]}\r\n                onChange={handleSliderChange}\r\n                count={(referenceType==='range')?3:2}\r\n                pushable={true}\r\n                allowCross={true}\r\n                tipFormatter={val => getTime(val)}\r\n                handleStyle={[{}, {backgroundColor: 'paleturquoise'}]}\r\n            \r\n            />\r\n            </div>\r\n            <div \r\n                className=\"controls\"\r\n            >\r\n                <Form\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <CustomInput \r\n                        type=\"switch\" \r\n                        id=\"pauseSwitchReferencer\"\r\n                        label=\"Pause\" \r\n                        checked={isPaused}\r\n                        onChange={() => setPaused(!isPaused)}\r\n                    />\r\n                    <CustomInput \r\n                        type=\"switch\"  \r\n                        label=\"Repeat after video ends\"\r\n                        id=\"repeatSwitchReferencer\" \r\n                        checked={repeat}\r\n                        onChange={() => setRepeat(!repeat)}\r\n                    />\r\n                    <Slider \r\n                        className=\"volumeSlider\"\r\n                        min={0}\r\n                        max={1}\r\n                        value={volume}\r\n                        step={0.1}\r\n                        onChange={handleVolumeChange}\r\n                    />\r\n                    <FormGroup check>\r\n                        <Label check>\r\n                            <Input onChange={handleTypeChange} value=\"point\" checked={referenceType === 'point'} type=\"radio\" name=\"referenceType\" />{' '}\r\n                            Reference Point\r\n                        </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                        <Label check>\r\n                            <Input onChange={handleTypeChange} value=\"range\" checked={referenceType === 'range'} type=\"radio\" name=\"referenceType\" />{' '}\r\n                            Reference Range\r\n                        </Label>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"referenceName\" sm={2}>Name</Label>\r\n                        <Col sm={5}>\r\n                            <Input type=\"text\" name=\"referenceName\" value={referenceName} onChange={(e) => setReferenceName(e.target.value)} id=\"referenceName\" placeholder=\"Enter the reference name here\" required/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup check row>\r\n                        <Col sm={{ size: 3, offset: 2 }}>\r\n                        <Input type=\"submit\" value={nextButtonText}/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoReferencer","C:\\Users\\josh_\\reactapps\\yt-app\\src\\utility.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoSearch.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\Sidebar.js",["117","118"],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\VideoReferences.js",["119","120"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Table, Button } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getTime } from '../utility'\r\nimport {\r\n    selectVideos,\r\n    removeAtIndex\r\n} from '../features/video/videoSlice'\r\nfunction VideoReferences() {\r\n    const videos = useSelector(selectVideos);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>Video References</h2>\r\n            {videos.length > 0 &&\r\n            <Table\r\n                size=\"sm\"\r\n                striped\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th>URL</th>\r\n                        <th>Name</th>\r\n                        <th>Start</th>\r\n                        <th>End</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {videos.map((video, index) => \r\n                    <tr key={video.id}>\r\n                        <td>{video.url}</td>\r\n                        <td>{video.name}</td>\r\n                        <td>{getTime(video.startSeconds)}</td>\r\n                        <td>{video.endSeconds?getTime(video.endSeconds):\"-:-\"}</td>\r\n                        <td>\r\n                            <NavLink to={`/edit/${video.id}`}>Edit</NavLink> \r\n                            {' '} | {' '}\r\n                            <a href=\"#\" onClick={() => dispatch(removeAtIndex(index))}>Delete</a>\r\n                        </td>\r\n                    </tr>)}\r\n                </tbody>\r\n            </Table>}\r\n            {videos.length === 0 && <span>There are no video references to display</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoReferences\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\EditReference.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\CreateReference.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\ComponentNavigator.js",["121","122"],"import React, { useState, useEffect } from 'react'\r\nimport { Button } from 'reactstrap';\r\n\r\nfunction ComponentNavigator({\r\n    currentComponent,\r\n    allowNavigation,\r\n    goToNextComponent,\r\n    goToPrevComponent,\r\n    children\r\n}) {\r\n    \r\n    return (\r\n        <div className=\"navigator\">\r\n            {children[currentComponent]}\r\n            {allowNavigation && (\r\n                <div style={{height: '10%'}} className=\"d-flex align-items-center justify-content-center\">\r\n                    <Button onClick={goToPrevComponent} outline color=\"secondary\">Prev</Button>\r\n                    <Button onClick={goToNextComponent} outline color=\"secondary\">Next</Button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentNavigator\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\video\\videoSlice.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\SidebarData.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\withNavigator.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\Login.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\Register.js",["123"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from '../../axios';\r\nimport { changeUser } from '../../features/user/userSlice';\r\nimport ErrorNotice from '../misc/ErrorNotice';\r\nfunction Register() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    const [firstname, setFirstName] = useState('');\r\n    const [lastname, setLastName] = useState('');\r\n    const [username, setUserName] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState({\r\n        email: '',\r\n        password: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        username: ''\r\n    });\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage('');\r\n\r\n        if (password !== passwordConfirm){\r\n            setMessage('Passwords do not match');\r\n            return;\r\n        }\r\n        try{\r\n            const newUser = { email, password, firstname, lastname, username};\r\n            const registerRes = await axios.post(\r\n                '/users/register',\r\n                newUser\r\n            );\r\n\r\n            const loginRes = await axios.post(\r\n                '/users/login',\r\n                {\r\n                    email,\r\n                    password,\r\n                }\r\n            );\r\n\r\n            dispatch(changeUser({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            }))\r\n\r\n            localStorage.setItem('auth-token', loginRes.data.token);\r\n            history.push('/');\r\n        }catch(err){\r\n            \r\n            (err.response.data.errors && setError(err.response.data.errors));\r\n            \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"page\">\r\n            <h2>Register</h2>\r\n            <form className=\"form\" onSubmit={submit}>\r\n                {message && (<ErrorNotice message={message} clearError={() => setMessage(undefined)} />)}\r\n                <label htmlFor=\"register-email\">Email</label>\r\n                <input id=\"register-email\" type=\"email\" onChange={(e) => setEmail(e.target.value)} value={email} />\r\n                {error.email && (<ErrorNotice message={error.email} clearError={() => setError({...error, email: undefined})} />)}\r\n\r\n                <label htmlFor=\"register-password\">Password</label>\r\n                <input id=\"register-password\" type=\"password\" onChange={(e) => setPassword(e.target.value)} value={password} />\r\n                <input type=\"password\" placeholder=\"Reenter password\" onChange={(e) => setPasswordConfirm(e.target.value)} value={passwordConfirm} />\r\n                {error.password && (<ErrorNotice message={error.password} clearError={() => setError({...error, password: undefined})} />)}\r\n\r\n                <label htmlFor=\"register-firstname\">First Name</label>\r\n                <input id=\"register-firstname\" type=\"text\" onChange={(e) => setFirstName(e.target.value)} value={firstname} />\r\n                {error.firstname && (<ErrorNotice message={error.firstname} clearError={() => setError({...error, firstname: undefined})} />)}\r\n\r\n                <label htmlFor=\"register-lastname\">Last Name</label>\r\n                <input id=\"register-lastname\" type=\"text\" onChange={(e) => setLastName(e.target.value)} value={lastname} />\r\n                {error.lastname && (<ErrorNotice message={error.lastname} clearError={() => setError({...error, lastname: undefined})} />)}\r\n\r\n                <label htmlFor=\"register-username\">Username</label>\r\n                <input id=\"register-username\" type=\"text\" onChange={(e) => setUserName(e.target.value)} value={username} />\r\n                {error.username && (<ErrorNotice message={error.username} clearError={() => setError({...error, username: undefined})} />)}\r\n\r\n                <input type=\"submit\" value=\"Register\" />\r\n\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\AuthOptions.js",["124"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { selectUserData, changeUser } from '../../features/user/userSlice';\r\n\r\nfunction AuthOptions({\r\n}) {\r\n    const userData = useSelector(selectUserData);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const logout = () => {\r\n        dispatch(changeUser({token: undefined, user: undefined}));\r\n        localStorage.setItem('auth-token', '');\r\n    }\r\n    return (\r\n        <nav className=\"auth-options\">\r\n            {userData.user ? (\r\n                <button onClick={logout}><AiIcons.AiOutlineLogout />Log out</button>\r\n                ) : (\r\n                    <>\r\n                    <button onClick={() => history.push('/register')}><AiIcons.AiOutlineUserAdd />Register</button>\r\n                    <button onClick={() => history.push('/login')}><AiIcons.AiOutlineLogin />Log in</button>\r\n                    </>\r\n                )\r\n\r\n            }\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default AuthOptions\r\n","C:\\Users\\josh_\\reactapps\\yt-app\\src\\features\\user\\userSlice.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\misc\\ErrorNotice.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\components\\auth\\ProtectedRoute.js",[],"C:\\Users\\josh_\\reactapps\\yt-app\\src\\axios.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":54,"column":6,"nodeType":"135","endLine":54,"endColumn":8,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":24,"column":5,"nodeType":"131","endLine":24,"endColumn":14,"suggestions":"138"},{"ruleId":"133","severity":1,"message":"139","line":33,"column":5,"nodeType":"131","endLine":33,"endColumn":14,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"141","line":46,"column":8,"nodeType":"135","endLine":46,"endColumn":18,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":7,"column":18,"nodeType":"145","messageId":"146","endLine":9,"endColumn":2},{"ruleId":"147","severity":1,"message":"148","line":28,"column":13,"nodeType":"149","endLine":28,"endColumn":92},{"ruleId":"129","severity":1,"message":"150","line":3,"column":17,"nodeType":"131","messageId":"132","endLine":3,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":40,"column":29,"nodeType":"149","endLine":40,"endColumn":88},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"153","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"154","line":34,"column":19,"nodeType":"131","messageId":"132","endLine":34,"endColumn":30},{"ruleId":"143","severity":1,"message":"144","line":7,"column":22,"nodeType":"145","messageId":"146","endLine":8,"endColumn":2},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userData'. Either include them or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect contains a call to 'setVideoDuration'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["158"],"React Hook useEffect contains a call to 'setVideoDuration'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [endPoint, value] as a second argument to the useEffect Hook.",["159"],"React Hook useEffect has missing dependencies: 'startPoint', 'video.endSeconds', and 'video.startSeconds'. Either include them or remove the dependency array.",["160"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'registerRes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [dispatch, userData]",{"range":"169","text":"170"},"Add dependencies array: []",{"range":"171","text":"172"},"Add dependencies array: [endPoint, value]",{"range":"173","text":"174"},"Update the dependencies array to be: [endPoint, startPoint, video.endSeconds, video.startSeconds]",{"range":"175","text":"176"},[1707,1709],"[dispatch, userData]",[905,905],", []",[1418,1418],", [endPoint, value]",[1671,1681],"[endPoint, startPoint, video.endSeconds, video.startSeconds]"]